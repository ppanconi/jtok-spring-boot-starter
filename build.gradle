plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.jtok'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.kafka:spring-kafka:2.4.0.RELEASE'
	implementation 'org.apache.kafka:kafka-clients:2.4.0'
	implementation 'org.springframework.integration:spring-integration-zookeeper'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation ('org.springframework.kafka:spring-kafka-test:2.4.0.RELEASE') {
		exclude module: 'kafka_2.11'
	}
	testImplementation 'org.apache.kafka:kafka-clients:2.4.0:test'
	testImplementation 'org.apache.kafka:kafka_2.12:2.4.0'
	testImplementation 'org.apache.kafka:kafka_2.12:2.4.0:test'
	testImplementation 'com.h2database:h2'
}

test {
	useJUnitPlatform()
}
